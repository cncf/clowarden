# CLOWarden chart default configuration values

imagePullSecrets: []
imageTag: ""
nameOverride: ""
pullPolicy: IfNotPresent

# Enable dynamic resource name prefix
#
# Enabling the dynamic resource name prefix ensures that the resources are named dynamically based on the Helm
# installation's name. This allows multiple installations of this chart in a single Kubernetes namespace. The prefix
# can be defined by using the `fullnameOverride`.
dynamicResourceNamePrefixEnabled: false

# Overwrites the installation's fullname generation (used for the dynamic resource name prefix)
fullnameOverride: ""

# Directory path where the configuration files should be mounted
configDir: "/home/clowarden/.config/clowarden"

# Check database readiness init container configuration
checkDbIsReadyInitContainer:
  securityContext: {}

# Database configuration
db:
  host: ""
  port: "5432"
  dbname: clowarden
  user: clowarden
  password: clowarden

# Log configuration
log:
  # Output format [json|pretty]
  format: json

# Database migrator configuration
dbmigrator:
  job:
    containerSecurityContext: {}
    image:
      # Database migrator image repository (without the tag)
      repository: ghcr.io/cncf/clowarden/dbmigrator
    podSecurityContext: {}

# CLOWarden server configuration
server:
  # Address to listen on
  addr: 0.0.0.0:9000

  # Path with static assets
  staticPath: /home/clowarden/web/build

  # Basic auth configuration
  basicAuth:
    # Enable basic auth
    enabled: false
    # Basic auth username
    username: clowarden
    # Basic auth password
    password: changeme

  # GitHub application configuration
  githubApp:
    # GitHub application ID
    appId: null
    # GitHub application private key
    privateKey: null
    # GitHub application webhook secret
    webhookSecret: null
    # GitHub application webhook secret fallback (handy for webhook secret rotation)
    webhookSecretFallback: null

  # Service configuration
  service:
    allocateLoadBalancerNodePorts: true
    annotations: {}
    ports:
      - name: http
        port: 80
        protocol: TCP
        targetPort: 9000
    type: NodePort

  # Ingress configuration
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    backendServicePort: 80
    rules: []
    tls: []

  # Deployment configuration
  deploy:
    containerSecurityContext: {}
    image:
      repository: ghcr.io/cncf/clowarden/server
    podSecurityContext: {}
    readinessProbe:
      httpGet:
        path: /health-check
        port: 9000
    replicaCount: 1  # Do not increase
    resources: {}

# Services CLOWarden will manage
services:
  github:
    enabled: true

# Organizations managed by this CLOWarden instance
organizations:
  []
  # - # Name of the GitHub organization
  #   name: org-name
  #   # CLOWarden's GitHub application installation id
  #   installationId: 12345678
  #   # Repository where the configuration files are located
  #   repository: .clowarden
  #   # Branch to use in the configuration repository
  #   branch: main
  #   # Legacy mode configuration
  #   legacy:
  #     # Whether legacy mode is enabled or not (must be at the moment)
  #     enabled: true
  #     # Path of the Sheriff's permissions file
  #     sheriffPermissionsPath: config.yaml

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    database: clowarden
    password: clowarden
    username: clowarden
  global:
    security:
      allowInsecureImages: true
  image:
    repository: artifacthub/postgres
    tag: latest
  persistence:
    mountPath: /data
  primary:
    extraVolumes:
      - name: run
        emptyDir: {}
    extraVolumeMounts:
      - name: run
        mountPath: /var/run/postgresql
